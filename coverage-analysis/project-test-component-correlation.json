[
  {
    "path": "/Users/tylerhenry/Documents/GitHub/testApp/src/App.tsx",
    "name": "App",
    "coverage": 0,
    "correlatedTests": [
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Given I am on the counter screen",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "When I tap the increment button",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Then the counter should display \"1\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Given I am on the counter screen",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "And the counter displays \"1\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "When I tap the decrement button",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Then the counter should display \"0\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Given I am on the counter screen",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "And the counter displays \"0\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "When I tap the decrement button",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Then the counter should display \"0\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Minimal",
        "scenario": "minimalistic",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Hello",
        "scenario": "World",
        "step": "Given a step",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Inconsistent cell counts",
        "scenario": "minimalistic",
        "step": "Given a data table with inconsistent cell count",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Inconsistent cell counts",
        "scenario": "minimalistic",
        "step": "Given the <what>",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Minimal",
        "scenario": "minimalistic",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Multiple parser errors",
        "scenario": "minimalistic",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Single parser error",
        "scenario": "minimalistic",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Background",
        "scenario": "minimalistic",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "DataTables",
        "scenario": "minimalistic",
        "step": "Given a simple data table",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "DataTables",
        "scenario": "minimalistic",
        "step": "And a data table with a single cell",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "DataTables",
        "scenario": "minimalistic",
        "step": "And a data table with different fromatting",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "DataTables",
        "scenario": "minimalistic",
        "step": "And a data table with an empty cell",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "DataTables",
        "scenario": "minimalistic",
        "step": "And a data table with comments and newlines inside",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Descriptions everywhere",
        "scenario": "two lines",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Descriptions everywhere",
        "scenario": "without indentation",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Descriptions everywhere",
        "scenario": "empty lines in the middle",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Descriptions everywhere",
        "scenario": "empty lines around",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Descriptions everywhere",
        "scenario": "comment after description",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Descriptions everywhere",
        "scenario": "comment right after description",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Descriptions everywhere",
        "scenario": "description with escaped docstring separator",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Descriptions everywhere",
        "scenario": "description with escaped docstring separator",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "DocString variations",
        "scenario": "minimalistic",
        "step": "Given a simple DocString",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "DocString variations",
        "scenario": "minimalistic",
        "step": "Given a DocString with content type",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "DocString variations",
        "scenario": "minimalistic",
        "step": "And a DocString with wrong indentation",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "DocString variations",
        "scenario": "minimalistic",
        "step": "And a DocString with alternative separator",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "DocString variations",
        "scenario": "minimalistic",
        "step": "And a DocString with normal separator inside",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "DocString variations",
        "scenario": "minimalistic",
        "step": "And a DocString with alternative separator inside",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "DocString variations",
        "scenario": "minimalistic",
        "step": "And a DocString with escaped separator inside",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Escaped pipes",
        "scenario": "They are the future",
        "step": "Given they have arrived",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Escaped pipes",
        "scenario": "They are the future",
        "step": "Given they have arrived",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Explicit language specification",
        "scenario": "minimalistic",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Minimal",
        "scenario": "minimalistic",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Minimal Scenario Outline",
        "scenario": "minimalistic",
        "step": "Given the minimalism",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Minimal Scenario Outline",
        "scenario": "minimalistic",
        "step": "Given the <what>",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Given I am on the counter screen",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "When I tap the increment button",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Then the counter should display \"1\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Given I am on the counter screen",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "And the counter displays \"1\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "When I tap the decrement button",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Then the counter should display \"0\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Given I am on the counter screen",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "And the counter displays \"0\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "When I tap the decrement button",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Then the counter should display \"0\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Given I am on the counter screen",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "When I tap the increment button",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Then the counter should display \"1\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Given I am on the counter screen",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "And the counter displays \"1\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "When I tap the decrement button",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Then the counter should display \"0\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Given I am on the counter screen",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "And the counter displays \"0\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "When I tap the decrement button",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Then the counter should display \"0\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Given I am on the counter screen",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "When I tap the increment button",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Then the counter should display \"1\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Given I am on the counter screen",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "And the counter displays \"1\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "When I tap the decrement button",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Then the counter should display \"0\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Given I am on the counter screen",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "And the counter displays \"0\"",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "When I tap the decrement button",
        "confidence": 0.6,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Then the counter should display \"0\"",
        "confidence": 0.6,
        "isE2E": true
      }
    ],
    "gapAnalysis": {
      "testingPriority": "high",
      "missingCoverage": [
        "Event handler interactions"
      ],
      "recommendedTests": [
        "Test ontainer interaction",
        "Test ontent interaction",
        "Test ontSize interaction"
      ]
    }
  },
  {
    "path": "/Users/tylerhenry/Documents/GitHub/testApp/src/components/Counter.tsx",
    "name": "Counter",
    "coverage": 0,
    "correlatedTests": [
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Given I am on the counter screen",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "When I tap the increment button",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Then the counter should display \"1\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Given I am on the counter screen",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "And the counter displays \"1\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "When I tap the decrement button",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Then the counter should display \"0\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Given I am on the counter screen",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "And the counter displays \"0\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "When I tap the decrement button",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Then the counter should display \"0\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "renders correctly with default value",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "const { getByTestId, getByText } = render(<Counter />);",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "expect(getByText('Counter Component')).toBeTruthy();",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "expect(getByTestId('counter-value').props.children).toBe(0);",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "renders with initial value when provided",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "const { getByTestId } = render(<Counter initialValue={5} />);",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "expect(getByTestId('counter-value').props.children).toBe(5);",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "increments the counter when increment button is pressed",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "const { getByTestId } = render(<Counter initialValue={0} />);",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "fireEvent.press(incrementButton);",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "expect(getByTestId('counter-value').props.children).toBe(1);",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "decrements the counter when decrement button is pressed",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "const { getByTestId } = render(<Counter initialValue={5} />);",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "fireEvent.press(decrementButton);",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "expect(getByTestId('counter-value').props.children).toBe(4);",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "does not decrement below zero",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "const { getByTestId } = render(<Counter initialValue={0} />);",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "fireEvent.press(decrementButton);",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter",
        "scenario": "Counter Component",
        "step": "expect(getByTestId('counter-value').props.children).toBe(0);",
        "confidence": 1,
        "isE2E": false
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Given I am on the counter screen",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "When I tap the increment button",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Then the counter should display \"1\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Given I am on the counter screen",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "And the counter displays \"1\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "When I tap the decrement button",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Then the counter should display \"0\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Given I am on the counter screen",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "And the counter displays \"0\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "When I tap the decrement button",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Then the counter should display \"0\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Given I am on the counter screen",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "When I tap the increment button",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Then the counter should display \"1\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Given I am on the counter screen",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "And the counter displays \"1\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "When I tap the decrement button",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Then the counter should display \"0\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Given I am on the counter screen",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "And the counter displays \"0\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "When I tap the decrement button",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Then the counter should display \"0\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Given I am on the counter screen",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "When I tap the increment button",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User increments the counter",
        "step": "Then the counter should display \"1\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Given I am on the counter screen",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "And the counter displays \"1\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "When I tap the decrement button",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "User decrements the counter",
        "step": "Then the counter should display \"0\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Given I am on the counter screen",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "And the counter displays \"0\"",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "When I tap the decrement button",
        "confidence": 1,
        "isE2E": true
      },
      {
        "feature": "Counter Functionality",
        "scenario": "Counter should not go below zero",
        "step": "Then the counter should display \"0\"",
        "confidence": 1,
        "isE2E": true
      }
    ],
    "gapAnalysis": {
      "testingPriority": "high",
      "missingCoverage": [
        "Testing with different prop values",
        "Event handler interactions",
        "Hook lifecycle testing"
      ],
      "recommendedTests": [
        "Test Counter with different CounterProps combinations",
        "Test onPress interaction",
        "Test onPress interaction",
        "Test ontainer interaction",
        "Test state changes in Counter"
      ]
    }
  }
]