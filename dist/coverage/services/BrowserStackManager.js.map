{
  "version": 3,
  "sources": ["../../../src/coverage/services/BrowserStackManager.ts"],
  "sourcesContent": ["import { getConfig } from '../../core/config';\n\nexport interface BrowserStackConfig {\n  enabled: boolean;\n  username?: string;\n  accessKey?: string;\n  projectName?: string;\n}\n\nexport class BrowserStackManager {\n  private config: BrowserStackConfig;\n\n  constructor(config?: Partial<BrowserStackConfig>) {\n    const defaultConfig = getConfig('browserStack', {\n      required: false,\n      configPath: process.env.BROWSERSTACK_CONFIG_PATH\n    });\n\n    this.config = {\n      enabled: false,\n      ...defaultConfig,\n      ...config\n    };\n  }\n\n  async initialize(): Promise<void> {\n    if (!this.config.enabled) {\n      console.log('BrowserStack integration is disabled');\n      return;\n    }\n\n    if (!this.config.username || !this.config.accessKey) {\n      throw new Error('BrowserStack credentials not configured');\n    }\n\n    console.log('BrowserStack integration initialized');\n  }\n\n  async startSession(capabilities: Record<string, any>): Promise<string> {\n    if (!this.config.enabled) {\n      throw new Error('BrowserStack integration is not enabled');\n    }\n    \n    // Implementation would go here\n    return 'session-id';\n  }\n\n  async endSession(sessionId: string): Promise<void> {\n    if (!this.config.enabled) return;\n    \n    // Implementation would go here\n    console.log(`Ended BrowserStack session: ${sessionId}`);\n  }\n} "],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA0B;AASnB,MAAM,oBAAoB;AAAA,EAG/B,YAAY,QAAsC;AAChD,UAAM,oBAAgB,yBAAU,gBAAgB;AAAA,MAC9C,UAAU;AAAA,MACV,YAAY,QAAQ,IAAI;AAAA,IAC1B,CAAC;AAED,SAAK,SAAS;AAAA,MACZ,SAAS;AAAA,MACT,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAAA,EACF;AAAA,EAEA,MAAM,aAA4B;AAChC,QAAI,CAAC,KAAK,OAAO,SAAS;AACxB,cAAQ,IAAI,sCAAsC;AAClD;AAAA,IACF;AAEA,QAAI,CAAC,KAAK,OAAO,YAAY,CAAC,KAAK,OAAO,WAAW;AACnD,YAAM,IAAI,MAAM,yCAAyC;AAAA,IAC3D;AAEA,YAAQ,IAAI,sCAAsC;AAAA,EACpD;AAAA,EAEA,MAAM,aAAa,cAAoD;AACrE,QAAI,CAAC,KAAK,OAAO,SAAS;AACxB,YAAM,IAAI,MAAM,yCAAyC;AAAA,IAC3D;AAGA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,WAAW,WAAkC;AACjD,QAAI,CAAC,KAAK,OAAO,QAAS;AAG1B,YAAQ,IAAI,+BAA+B,SAAS,EAAE;AAAA,EACxD;AACF;",
  "names": []
}
